package main

import "fmt"

func main1() {

	// Константы, как и переменные, хранят некоторые данные, но в отличие от переменных значения констант нельзя изменить, они устанавливаются один раз. Вычисление констант производится во время компиляции. Благодаря этому уменьшается количество работы, которую необходимо произвести во время выполнения, упрощается поиск ошибок, связанных с константами

	// Для определения констант применяется ключевое слово const
	const pi float64 = 3.1415

	// И в отличие от переменной мы не можем изменить значение константы. А если и попробуем это сделать, то при компиляции мы получим ошибку
	const pia float64 = 3.1415

	//pia = 2.7182   // !Ошибка

	// В одном определении можно объявить сразу несколько констант
	const (
		pib float64 = 3.1415
		ec  float64 = 2.7182
	)

	// или так
	const pic, ed = 3.1415, 2.7182

	// Если у константы не указан тип, то он выводится неявно на основании того значения, которым инициализируется константа
	const na = 5 // тип int

	// В то же время необходимо обязательно инициализировать константу начальным значением при ее объявлении. Например, следующие определения констант являются недоступными, так как они не инициализируются
	//const db
	//const nb int

	// Если определяется последовательность констант, то инициализацию значением можно опустить для всех констант, кроме первой. В этом случае константа без значения получит предыдущей константы
	const (
		ad = 1
		bd
		cd
		dd = 3
		fd
	)
	fmt.Println(ad, bd, cd, dd, fd) //1, 1, 1, 3, 3

	// Константы можно инициализировать только константными значениями, например, литералами типа чисел или строк, или значениями других констант. Но инициализировать константу значением переменной мы не можем

	var mf int = 7
	//const kf = mf
	const sf = 5
	const nf = sf

}
